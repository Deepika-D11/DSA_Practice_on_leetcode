Find the first non-repeating element in a given array arr of integers and if there is not present any non-repeating element then return 0
Note: The array consists of only positive and negative integers and not zero.
Examples:
Input: arr[] = [-1, 2, -1, 3, 2]
Output: 3
Explanation: -1 and 2 are repeating whereas 3 is the only number occuring once. Hence, the output is 3. 
I did it using HashMap okey
//solution
class Solution {
    public int firstNonRepeating(int[] arr) {
        // Complete the function
        HashMap <Integer , Integer> freMap = new HashMap<>();
       // store the key value pairs in the hashmap , number and the frequency 
        for(int num : arr){
            if(freMap.containsKey(num)){
                freMap.put(num, freMap.get(num)+1);
            }else{
                freMap.put(num,1);
            }
        }
        
        // now check the frequency of the element  has  only 1
        
        for(int key : arr){
            if(freMap.get(key)==1){
                return key;
            }
        }
        
        return 0;
    }
}

// how i solved it I'll explain 
first create HashMap  , HashMap is empty initially than traverse all array using enhance for loop and than save 
the frequency using the .put method Once it done than again traverse the HashMap with the frequency if the any element
has frequency as 1 than return it else return 0
